#
#       .github/workflows/ContinuousTesting-Linux.yml
#
#       Copyright (C) 2014 - 2021  The CFS SW Platform Development Team.
#                        All rights reserved.
#
#
#    Permission is hereby granted, free of charge, to any person obtaining
#    a copy of this software and associated documentation files (the
#    "Software"), to deal in the Software without restriction, including
#    without limitation the rights to use, copy, modify, merge, publish,
#    distribute, sublicense, and/or sell copies of the Software, and to
#    permit persons to whom the Software is furnished to do so, subject to
#    the following conditions:
#
#    The above copyright notice and this permission notice shall be
#    included in all copies or substantial portions of the Software.
#
#    THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
#    EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
#    MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
#    NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE
#    LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
#    OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
#    WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
#
#

# GitHub Actions workflow file
# https://help.github.com/en/actions/reference/workflow-syntax-for-github-actions

name: 🐧🐧 Continuous Delivery
# MANUAL: code changes are prepared to be released to production
# Automatically release to repository
# BUILD TEST MERGE  to ARTIFACTORY
concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

on:
  push:
    branches: [ main, master, release/**]
    tags:
    - "v[0-9]+.[0-9]+.[0-9]+"
    # - "^v([0-9]+)\.([0-9]+)(\.([0-9]+))?(-rc([0-9]+))?$ ]]"
  pull_request:
    branches: [ main, master, release/**]
    tags:
    - "v[0-9]+.[0-9]+.[0-9]+"
    - "rev-*.*.*"

env:
  REPO_NAME: ${{ github.repository }}
  EVENT_NAME: ${{ github.event_name }}

jobs:
  build:
    runs-on: ubuntu-latest
    timeout-minutes: 10
    steps:
        # if: contains(github.head_ref, 'feature') || contains(github.head_ref, 'release')
        # if: contains(github.base_ref, 'staging') || contains(github.base_ref, 'production')
      - name: Checkout
        uses: actions/checkout@v3
        with:
          submodules: 'recursive'
          fetch-depth: '0'

      - name: Mount bazel caches
        uses: actions/cache@v3
        with:
          path: |
            ~/.cache/bazel
            ~/.cache/bazel-repo
          key: bazel-cache-${{ runner.os }}-${{ hashFiles('WORKSPACE') }}
          restore-keys: |
            bazel-cache-
            bazel-cache-${{ runner.os }}-

      - name: bazelisk test //...
        env:
          # Bazelisk will download bazel to here
          XDG_CACHE_HOME: ~/.cache/bazel-repo
        run: bazel --bazelrc=.github/workflows/ci.bazelrc --bazelrc=.bazelrc test //...

      - name: Prepare workspace snippet
        run: .github/workflows/workspace_snippet.sh ${{ env.GITHUB_REF_NAME }} > release_notes.txt

      - name: Release
        uses: softprops/action-gh-release@v1
        with:
          prerelease: true
          # Use GH feature to populate the changelog automatically
          generate_release_notes: true
          body_path: release_notes.txt
